#This file contains code corresponding to Section 4.7. in the manuscript
#The goal is to compare our developed method with state-of-the-art methods
#This is R code containing our method and classical Granger test from lmtest package. 
#To use our method, you need a function CTC() which can be found in the other txt.file
#We rewrote all results in the table by hand.
library(lmtest)
################################################################################################################
#################################VAR model#####################################################################
################################################################################################################

n=500 #choose n=5000 for ther columns in the table
alpha_level_for_granger_test = 0.05
number_of_repetitions = 100

resultCTC1 = c(); resultCTC2 = c()    #1 corresponds to X-->Y direction, #2 corresponds to Y-->X direction
resultGranger1=c();resultGranger2=c() #1 corresponds to X-->Y direction, #2 corresponds to Y-->X direction

for (k in 1:number_of_repetitions) {
 
  epsilon_a=rpareto(n,1)
  epsilon_b=rpareto(n,1)
  a=rep(0, n);b=rep(0, n)
  
  for (i in 3:n) {
    a[i]=0.5*a[i-1]                +epsilon_a[i]
    b[i]=0.5*b[i-1]   + 0.5*a[i-2] +epsilon_b[i]
  }
  x=data.frame(a,b)
  
  CTCresult = CTC(x, lag=2)
  resultCTC1 = c(resultCTC1, as.numeric(CTCresult[1,1]))
  resultCTC2 = c(resultCTC2, as.numeric(CTCresult[2,1]))
  
  resultGranger1 = c(resultGranger1, grangertest(x[,1], x[,2], order = 3)$`Pr(>F)`[2]<alpha_level_for_granger_test)
  resultGranger2 = c(resultGranger2, grangertest(x[,2], x[,1], order = 3)$`Pr(>F)`[2]<alpha_level_for_granger_test)
  
}
tau = 0.9
sum(resultCTC1>tau)/number_of_repetitions
1-sum(resultCTC2>tau)/number_of_repetitions

sum(resultGranger1)/number_of_repetitions
1-sum(resultGranger2)/number_of_repetitions












################################################################################################################
#################################NAAR model#####################################################################
################################################################################################################

f <- function(x){if ( x>50) return( x^(0.75) ) else return(0)}

n=500 #choose n=5000 for ther columns in the table
alpha_level_for_granger_test = 0.05
number_of_repetitions = 100

resultCTC1 = c(); resultCTC2 = c()    #1 corresponds to X-->Y direction, #2 corresponds to Y-->X direction
resultGranger1=c();resultGranger2=c() #1 corresponds to X-->Y direction, #2 corresponds to Y-->X direction


for (k in 1:number_of_repetitions) {
  
  epsilon_a=rpareto(n,1)
  epsilon_b=rpareto(n,1)
  epsilon_c=0.5*rpareto(n,1)
  a=rep(0, n);b=rep(0, n);c=rep(0,n)
  
  for (i in 4:n) {
    c[i]=0.5*c[i-1]                             +epsilon_c[i]
    a[i]=0.5*a[i-1]   +0.5*c[i-2]               +epsilon_a[i]
    b[i]=0.5*b[i-1]   +0.5*c[i-1]   + f(a[i-3]) +epsilon_b[i]
  }
  x=data.frame(a,b)
  
  CTCresult = CTC(x, lag=3)
  resultCTC1 = c(resultCTC1, as.numeric(CTCresult[1,1]))
  resultCTC2 = c(resultCTC2, as.numeric(CTCresult[2,1]))
  
  resultGranger1 = c(resultGranger1, grangertest(x[,1], x[,2], order = 3)$`Pr(>F)`[2]<alpha_level_for_granger_test)
  resultGranger2 = c(resultGranger2, grangertest(x[,2], x[,1], order = 3)$`Pr(>F)`[2]<alpha_level_for_granger_test)
  
}
tau = 0.9
sum(resultCTC1>tau)/number_of_repetitions
1-sum(resultCTC2>tau)/number_of_repetitions

sum(resultGranger1)/number_of_repetitions
1-sum(resultGranger2)/number_of_repetitions

